(()=>{"use strict";var t={424:(t,n,e)=>{e.d(n,{Z:()=>a});var s=e(81),i=e.n(s),r=e(645),o=e.n(r)()(i());o.push([t.id,"body {\r\n  background-color: #02182B;\r\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  gap: 45px;\r\n  justify-content: center;\r\n  padding: 50px;\r\n  background-color: #306573;\r\n  border-radius: 10px;\r\n  color: white;\r\n  margin-top: 65px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n}\r\n\r\n/* SPDX-FileCopyrightText: NOI Techpark <digital@noi.bz.it>\r\nSPDX-License-Identifier: AGPL-3.0-or-later */",""]);const a=o},645:t=>{t.exports=function(t){var n=[];return n.toString=function(){return this.map((function(n){var e="",s=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),s&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=t(n),s&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(t,e,s,i,r){"string"==typeof t&&(t=[[null,t,void 0]]);var o={};if(s)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(o[c]=!0)}for(var d=0;d<t.length;d++){var h=[].concat(t[d]);s&&o[h[0]]||(void 0!==r&&(void 0===h[5]||(h[1]="@layer".concat(h[5].length>0?" ".concat(h[5]):""," {").concat(h[1],"}")),h[5]=r),e&&(h[2]?(h[1]="@media ".concat(h[2]," {").concat(h[1],"}"),h[2]=e):h[2]=e),i&&(h[4]?(h[1]="@supports (".concat(h[4],") {").concat(h[1],"}"),h[4]=i):h[4]="".concat(i)),n.push(h))}},n}},81:t=>{t.exports=function(t){return t[1]}},379:t=>{var n=[];function e(t){for(var e=-1,s=0;s<n.length;s++)if(n[s].identifier===t){e=s;break}return e}function s(t,s){for(var r={},o=[],a=0;a<t.length;a++){var c=t[a],d=s.base?c[0]+s.base:c[0],h=r[d]||0,l="".concat(d," ").concat(h);r[d]=h+1;var p=e(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var v=i(u,s);s.byIndex=a,n.splice(a,0,{identifier:l,updater:v,references:1})}o.push(l)}return o}function i(t,n){var e=n.domAPI(n);return e.update(t),function(n){if(n){if(n.css===t.css&&n.media===t.media&&n.sourceMap===t.sourceMap&&n.supports===t.supports&&n.layer===t.layer)return;e.update(t=n)}else e.remove()}}t.exports=function(t,i){var r=s(t=t||[],i=i||{});return function(t){t=t||[];for(var o=0;o<r.length;o++){var a=e(r[o]);n[a].references--}for(var c=s(t,i),d=0;d<r.length;d++){var h=e(r[d]);0===n[h].references&&(n[h].updater(),n.splice(h,1))}r=c}}},569:t=>{var n={};t.exports=function(t,e){var s=function(t){if(void 0===n[t]){var e=document.querySelector(t);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(t){e=null}n[t]=e}return n[t]}(t);if(!s)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");s.appendChild(e)}},216:t=>{t.exports=function(t){var n=document.createElement("style");return t.setAttributes(n,t.attributes),t.insert(n,t.options),n}},565:(t,n,e)=>{t.exports=function(t){var n=e.nc;n&&t.setAttribute("nonce",n)}},795:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=t.insertStyleElement(t);return{update:function(e){!function(t,n,e){var s="";e.supports&&(s+="@supports (".concat(e.supports,") {")),e.media&&(s+="@media ".concat(e.media," {"));var i=void 0!==e.layer;i&&(s+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),s+=e.css,i&&(s+="}"),e.media&&(s+="}"),e.supports&&(s+="}");var r=e.sourceMap;r&&"undefined"!=typeof btoa&&(s+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),n.styleTagTransform(s,t,n.options)}(n,t,e)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)}}}},589:t=>{t.exports=function(t,n){if(n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}}},n={};function e(s){var i=n[s];if(void 0!==i)return i.exports;var r=n[s]={id:s,exports:{}};return t[s](r,r.exports,e),r.exports}e.n=t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return e.d(n,{a:n}),n},e.d=(t,n)=>{for(var s in n)e.o(n,s)&&!e.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:n[s]})},e.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),e.nc=void 0,(()=>{class t extends HTMLElement{constructor(t,n,e,s){super(),this.shadow=this.attachShadow({mode:"open"}),this.events=new EventTarget,this.x=t,this.y=n,this.num=e,this.canvas=s,this.selectedAsFirst=!1,this.selectedAsSecond=!1,this.addEventListener("click",(t=>{t.stopPropagation(),t.preventDefault(),this.events.dispatchEvent(new Event("pointPressed"))}))}onPointPressed(t){this.events.addEventListener("pointPressed",t)}connectedCallback(){this.render()}render(){return this.shadowRoot.innerHTML=`\n        <style>\n          .point {\n            position: absolute;\n            display: block;\n            background-color: white;\n            border: 2px solid black;\n            font-size: 18px;\n            font-weight: bold;\n            color: #306573;\n            border-radius: 50%;\n            width: 10px;\n            height: 10px;\n            left: ${this.x-5}px; /* Сдвиг для центрирования */\n            top: ${this.y-5}px;  /* Сдвиг для центрирования */\n            z-index: 2;\n          }\n          .point::before {\n            content: 'p${this.num}';\n            position: absolute;\n            bottom: 15px;\n            z-index: 2;\n          }\n          .point:hover {\n            border: 2px solid rgb(38, 143, 235);\n            cursor: pointer;\n            color: rgb(38, 143, 235);\n          }\n          .point_selected {\n            background-color: #0197F6;\n          }\n        </style>\n        <div class="point ${(this.selectedAsFirst||this.selectedAsSecond)&&"point_selected"}">\n            \n        </div>\n      `}}customElements.define("my-point",t);class n extends HTMLElement{constructor(t,n,e,s,i){super(),this.shadow=this.attachShadow({mode:"open"}),this.x1=t,this.y1=n,this.x2=e,this.y2=s,this.active=!1,this.num=i}connectedCallback(){this.render()}render(){return this.shadowRoot.innerHTML=`\n      <style>\n      .vektor-container {\n        position: absolute;\n        pointer-events: none; /* Чтобы не мешать кликам по канвасу */\n        z-index: 1;\n        width: 100%;\n        height: 100%;\n      }\n      .vektor {\n\n      }\n      .line {\n        position: relative;\n        fill: none;\n        stroke-width: 4;\n        stroke: black;\n        z-index: 1;\n      }\n      .line_active {\n        stroke: rgb(38, 143, 235);\n      }\n    </style>\n      <div class="vektor-container">\n        <svg class="vektor" height="100%" width="100%" xmlns="http://www.w3.org/2000/svg">\n          <line class="line ${this.active&&"line_active"}" x1="${this.x1}" y1="${this.y1}" x2="${this.x2}" y2="${this.y2}" />\n        </svg> \n      </div>\n    `}}customElements.define("my-vektor",n);class s extends HTMLElement{constructor(){super(),this.isCanvasActive=!1,this.isPolygonDrawn=!1,this.firstPointSelectionFlag=!1,this.secondPointSelectionFlag=!1,this.isPathCreated=!1,this.order="Clockwise order",this.pointArr=[],this.vektorArr=[],this.events=new EventTarget}connectedCallback(){this.render(),this.canvas=this.querySelector(".drawing-canvas"),this.canvas.addEventListener("click",(t=>{t.preventDefault(),t.stopPropagation(),this.renderPoint(t)})),this.events.addEventListener("pathesCreated",(t=>{this.vektorArr.forEach((t=>t.active=!1));const n=this.pointArr.map((t=>t.num)),e=t.detail;this.order=t.detail.order;const s=e.clockwisePath.filter((t=>e.clockwisePath.indexOf(t)!==e.clockwisePath.length-1)).map((t=>n.indexOf(t))).map((t=>this.vektorArr[t]));if(s.forEach((t=>{t.active=!0,t.render()})),this.isPathCreated=!0,"Clockwise order"===this.order)s.forEach((t=>{t.render()}));else{const t=this.vektorArr.filter((t=>t.active)),n=this.vektorArr.filter((t=>!t.active));t.forEach((t=>{t.active=!1,t.render()})),n.forEach((t=>{t.active=!0,t.render()}))}})),this.events.addEventListener("changeOrder",(()=>{this.vektorArr.forEach((t=>{t.active?(t.active=!1,t.render()):(t.active=!0,t.render())}))}))}handlePointPressed(t){this.firstPointSelectionFlag?(this.pointArr.map((t=>{t.selectedAsFirst=!1,t.render()})),t.selectedAsFirst=!0,this.events.dispatchEvent(new Event("pointSelected")),t.render()):this.secondPointSelectionFlag&&(this.pointArr.map((t=>{t.selectedAsSecond=!1,t.render()})),t.selectedAsSecond=!0,this.events.dispatchEvent(new Event("pointSelected")),t.render());const n=this.pointArr.find((t=>!0===t.selectedAsFirst)),e=this.pointArr.find((t=>!0===t.selectedAsSecond));n&&e&&this.events.dispatchEvent(new Event("twoPointsSelected"))}renderPoint(n){if(this.isCanvasActive&&!this.isPolygonDrawn){const e=this.canvas.getBoundingClientRect(),s=n.clientX-e.left,i=n.clientY-e.top,r=new t(s,i,this.pointArr.length+1,this);r.onPointPressed((()=>{this.handlePointPressed(r)})),this.pointArr.push(r),this.events.dispatchEvent(new Event("pointAdded")),this.canvas.appendChild(r)}}clearCanvas(){this.pointArr.forEach((t=>{this.canvas.removeChild(t)})),this.pointArr=[],this.vektorArr.forEach((t=>{this.canvas.removeChild(t)})),this.vektorArr=[],this.isCanvasActive=!1,this.events.dispatchEvent(new Event("pointsCleared")),this.isPolygonDrawn=!1,this.isPathCreated=!1}findCenterPoint(t){let n,e=0,s=0,i=t.length;for(n=0;n<i;n++)e+=t[n].x,s+=t[n].y;return{x:e/i,y:s/i}}findAngles(t,n){let e,s,i,r,o=n.length;for(e=0;e<o;e++)s=n[e],i=s.x-t.x,r=s.y-t.y,s.angle=Math.atan2(r,i);this.pointArr.sort((function(t,n){return t.angle>n.angle?1:t.angle<n.angle?-1:0}))}drawPolygon(){if(!this.isPolygonDrawn){let t=[];const e=this.findCenterPoint(this.pointArr);this.findAngles(e,this.pointArr);for(let n=0;n<this.pointArr.length;n++)n+1!==this.pointArr.length?t.push({x1:this.pointArr[n].x,y1:this.pointArr[n].y,x2:this.pointArr[n+1].x,y2:this.pointArr[n+1].y}):t.push({x1:this.pointArr[n].x,y1:this.pointArr[n].y,x2:this.pointArr[0].x,y2:this.pointArr[0].y}),this.isPolygonDrawn=!0,this.isCanvasActive=!1;this.pointArr.forEach(((e,s)=>{const i=new n(t[s].x1,t[s].y1,t[s].x2,t[s].y2,this.vektorArr.length+1);this.vektorArr.push(i),this.canvas.appendChild(i)}))}}render(){return this.innerHTML='\n      <style>\n        drawing-canvas {\n          display: flex;\n          flex-direction: row;\n          align-items: stretch;\n          width: 100%;\n          color: black;\n          border: 1px solid black;\n        }\n        .drawing-canvas {\n          position: relative;\n          width: 100%;\n          height: 100%;\n          background-color: white;\n          flex: 1;\n        }\n      </style>\n      <div class="drawing-canvas">\n      </div>\n    '}}customElements.define("drawing-canvas",s);class i extends HTMLElement{constructor(t){super(),this.canvas=t,this.events=new EventTarget,this.clockwisePath="",this.counterclockwisePath="",this.orderButtonText="Clockwise order",this.currentPath=this.clockwisePath}attachEventListeners(){this.querySelector(".action-panel").addEventListener("click",(t=>{t.target.classList.contains("create-point-button")?this.canvas.isCanvasActive=!0:t.target.classList.contains("clear-button")?(this.canvas.clearCanvas(),this.clockwisePath="",this.counterclockwisePath="",this.currentPath="",this.orderButtonText="Clockwise order",this.render()):t.target.classList.contains("draw-button")?(this.canvas.drawPolygon(),this.render()):t.target.classList.contains("first-point-button")?this.events.dispatchEvent(new Event("firstPointButtonPressed")):t.target.classList.contains("second-point-button")?this.events.dispatchEvent(new Event("secondPointButtonPressed")):t.target.classList.contains("order-button")&&(this.canvas.events.dispatchEvent(new Event("changeOrder")),"Clockwise order"===this.orderButtonText?(this.orderButtonText="Counterclockwise order",this.currentPath=this.counterclockwisePath.map((t=>"p"+t)).join("-")):(this.orderButtonText="Clockwise order",this.currentPath=this.clockwisePath.map((t=>"p"+t)).join("-")),this.render())}))}handlePath(){const t=this.canvas.pointArr.find((t=>t.selectedAsFirst)),n=this.canvas.pointArr.find((t=>t.selectedAsSecond));if(t&&n){const e=this.canvas.pointArr.map((t=>t.num)),s=t.num,i=n.num,r=this.makePathes(e,s,i);this.clockwisePath=r.clockwiseArr,this.counterclockwisePath=r.counterclockwiseArr,this.canvas.events.dispatchEvent(new CustomEvent("pathesCreated",{detail:{clockwisePath:this.clockwisePath,counterclockwisePath:this.counterclockwisePath,order:this.orderButtonText}}))}}makePathes(t,n,e){const s=t.indexOf(n),i=t.indexOf(e);let r=[],o=[];for(let n=s;n%t.length!==i;n++)r.push(t[n%t.length]);r.push(t[i]);const a=t.reverse(),c=a.indexOf(n),d=a.indexOf(e);for(let t=c;t%a.length!==d;t++)o.push(a[t%a.length]);return o.push(a[d]),{clockwiseArr:r,counterclockwiseArr:o}}connectedCallback(){this.render();const t=this.canvas;t.events.addEventListener("pointAdded",(()=>this.render())),t.events.addEventListener("pointsCleared",(()=>this.render())),this.events.addEventListener("firstPointButtonPressed",(n=>{t.secondPointSelectionFlag=!1,t.firstPointSelectionFlag=!0})),this.events.addEventListener("secondPointButtonPressed",(n=>{t.firstPointSelectionFlag=!1,t.secondPointSelectionFlag=!0})),t.events.addEventListener("pointSelected",(()=>this.render())),t.events.addEventListener("twoPointsSelected",(()=>{this.canvas.vektorArr.forEach((t=>{t.active=!1,t.render()})),this.handlePath(),"Clockwise order"===this.orderButtonText?this.currentPath=this.clockwisePath.map((t=>"p"+t)).join("-"):this.currentPath=this.counterclockwisePath.map((t=>"p"+t)).join("-"),this.render()}))}render(){const t=this.canvas.pointArr.length,n=!(t>0),e=!(t>=3&&t<=15)||this.canvas.isPolygonDrawn,s=!this.canvas.isPolygonDrawn,i=this.canvas.isPolygonDrawn,r=!this.canvas.isPathCreated,o=this.canvas.pointArr.find((t=>t.selectedAsFirst)),a=this.canvas.pointArr.find((t=>t.selectedAsSecond)),c={};this.canvas.pointArr.forEach((t=>{c[t.num]=t}));const d=this.currentPath;this.innerHTML=`\n      <style>\n        .action-panel {\n          display: flex;\n          flex-direction: column;\n          gap: 30px;\n          width: 350px;\n        }\n        .action-panel_active {\n          border: 1px solid green;\n        }\n        .main-paragraph {\n          font-size: 22px;\n          font-weight: bold;\n        }\n        .path {\n          display: flex;\n          flex-direction: column;\n          gap: 15px;\n        }\n        .button {\n          font-size: 16px;\n          padding: 10px 20px;\n          width: 100%;\n          border: none;\n          border-radius: 8px;\n        }\n        .button:hover:not(:disabled) {\n          background-color: #d3eaea;\n          outline: 1px solid white;\n        }\n        .button:disabled {\n          opacity: .7;\n          pointer: none;\n        }\n        p {\n          margin: 5px 0px;\n        }\n        .first-point-button {\n          max-width: 260px;\n        }\n        .second-point-button {\n          max-width: 260px;\n        }\n        .path-button-container {\n          display: flex;\n          gap: 30px;\n          align-items: flex-start;\n        }\n      </style>\n      <div class="action-panel">\n        <div>\n          <p class="main-paragraph">Create polygon</p>\n          <button class="button create-point-button" ${i&&"disabled"}>Create points</button>\n          <points-component numbers="${t}"></points-component>\n          <button class="button draw-button" ${e&&"disabled"}>Draw polygon</button>\n        </div>\n        <div>\n          <p class="main-paragraph">Create path</p>\n          <div class="path">        \n            <div class="path-button-container">\n              <button class="button first-point-button" ${s&&"disabled"}>First point:</button>\n              <p>${o?`p${o.num}`:""}</p>\n            </div>\n            <div class="path-button-container">\n              <button class="button second-point-button" ${s&&"disabled"}>Second point:</button>\n              <p>${a?`p${a.num}`:""}</p>\n            </div>\n            <button class="button order-button" ${r&&"disabled"}>${this.orderButtonText}</button>\n            <button class="button clear-button" ${n&&"disabled"}>Clear</button>\n          </div>\n        </div>\n        <p class="main-paragraph">Path: ${d}</p>\n      </div>\n    `,this.attachEventListeners()}}customElements.define("action-panel",i);class r extends HTMLElement{constructor(){super()}connectedCallback(){this.render();const t=document.querySelector(".container"),n=new s;t.appendChild(n),setTimeout((()=>{const e=new i(n);t.appendChild(e)}),0)}render(){return this.innerHTML='\n      <style>\n        .container {\n          display: flex;\n          justify-content: center;\n          gap: 30px;\n          max-width: 900px;\n        }\n      </style>\n      <div class="container"></div>\n      '}}customElements.define("app-initializer",r);class o extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"});const t=this.getAttribute("numbers"),n=document.createElement("style");n.textContent=`\n        p {\n          color: ${t>=3&&t<=15?"#1bcc35":"#DC2E45"};\n        }\n      `,this.paragraph=document.createElement("p"),this.shadowRoot.append(n,this.paragraph)}connectedCallback(){this.updateNumbers()}static get observedAttributes(){return["numbers"]}attributeChangedCallback(t,n,e){"numbers"===t&&this.updateNumbers()}updateNumbers(){const t=this.getAttribute("numbers");t&&(this.paragraph.textContent=`Created ${t} points`)}}customElements.define("points-component",o);var a=e(379),c=e.n(a),d=e(795),h=e.n(d),l=e(569),p=e.n(l),u=e(565),v=e.n(u),f=e(216),g=e.n(f),m=e(589),b=e.n(m),x=e(424),w={};w.styleTagTransform=b(),w.setAttributes=v(),w.insert=p().bind(null,"head"),w.domAPI=h(),w.insertStyleElement=g(),c()(x.Z,w),x.Z&&x.Z.locals&&x.Z.locals;class y extends HTMLElement{constructor(){super(),this.shadow=this.attachShadow({mode:"open"})}connectedCallback(){this.render()}render(){this.shadow.innerHTML="\n            <style>\n                h1 {\n                    color: red;\n                }\n            </style>\n            <h1>\n                Drawing Canvas:\n            </h1>\n        "}}customElements.define("hello-world",y)})()})();