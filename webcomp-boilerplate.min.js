(()=>{"use strict";var t={424:(t,e,n)=>{n.d(e,{Z:()=>a});var s=n(81),i=n.n(s),r=n(645),o=n.n(r)()(i());o.push([t.id,"body {\r\n  background-color: #02182B;\r\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n}\r\n\r\n.container {\r\n  display: flex;\r\n  gap: 45px;\r\n  justify-content: center;\r\n  padding: 50px;\r\n  background-color: #306573;\r\n  border-radius: 10px;\r\n  color: white;\r\n  margin-top: 65px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n}\r\n\r\n/* SPDX-FileCopyrightText: NOI Techpark <digital@noi.bz.it>\r\nSPDX-License-Identifier: AGPL-3.0-or-later */",""]);const a=o},645:t=>{t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",s=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),s&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),s&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,s,i,r){"string"==typeof t&&(t=[[null,t,void 0]]);var o={};if(s)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(o[c]=!0)}for(var d=0;d<t.length;d++){var l=[].concat(t[d]);s&&o[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),i&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=i):l[4]="".concat(i)),e.push(l))}},e}},81:t=>{t.exports=function(t){return t[1]}},379:t=>{var e=[];function n(t){for(var n=-1,s=0;s<e.length;s++)if(e[s].identifier===t){n=s;break}return n}function s(t,s){for(var r={},o=[],a=0;a<t.length;a++){var c=t[a],d=s.base?c[0]+s.base:c[0],l=r[d]||0,h="".concat(d," ").concat(l);r[d]=l+1;var p=n(h),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var v=i(u,s);s.byIndex=a,e.splice(a,0,{identifier:h,updater:v,references:1})}o.push(h)}return o}function i(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,i){var r=s(t=t||[],i=i||{});return function(t){t=t||[];for(var o=0;o<r.length;o++){var a=n(r[o]);e[a].references--}for(var c=s(t,i),d=0;d<r.length;d++){var l=n(r[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}r=c}}},569:t=>{var e={};t.exports=function(t,n){var s=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!s)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");s.appendChild(n)}},216:t=>{t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var s="";n.supports&&(s+="@supports (".concat(n.supports,") {")),n.media&&(s+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(s+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),s+=n.css,i&&(s+="}"),n.media&&(s+="}"),n.supports&&(s+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(s+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(s,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}}},e={};function n(s){var i=e[s];if(void 0!==i)return i.exports;var r=e[s]={id:s,exports:{}};return t[s](r,r.exports,n),r.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var s in e)n.o(e,s)&&!n.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.nc=void 0,(()=>{class t extends HTMLElement{constructor(t,e,n,s){super(),this.shadow=this.attachShadow({mode:"open"}),this.events=new EventTarget,this.x=t,this.y=e,this.num=n,this.canvas=s,this.selectedAsFirst=!1,this.selectedAsSecond=!1}onPointPressed(t){this.events.addEventListener("pointPressed",t)}connectedCallback(){this.render(),this.addEventListener("click",(t=>{t.stopPropagation(),t.preventDefault(),this.events.dispatchEvent(new Event("pointPressed"))}))}render(){return this.shadowRoot.innerHTML=`\n        <style>\n          .point {\n            position: absolute;\n            display: block;\n            background-color: white;\n            border: 2px solid black;\n            font-size: 18px;\n            font-weight: bold;\n            color: #306573;\n            border-radius: 50%;\n            width: 10px;\n            height: 10px;\n            left: ${this.x-5}px; /* Сдвиг для центрирования */\n            top: ${this.y-5}px;  /* Сдвиг для центрирования */\n            z-index: 2;\n          }\n          .point::before {\n            content: 'p${this.num}';\n            position: absolute;\n            bottom: 15px;\n            z-index: 2;\n          }\n          .point:hover {\n            border: 2px solid rgb(38, 143, 235);\n            cursor: pointer;\n            color: rgb(38, 143, 235);\n          }\n          .point_selected {\n            background-color: #0197F6;\n          }\n        </style>\n        <div class="point ${(this.selectedAsFirst||this.selectedAsSecond)&&"point_selected"}">\n            \n        </div>\n      `}}customElements.get("my-point")||customElements.define("my-point",t);class e extends HTMLElement{constructor(t,e,n,s,i){super(),this.shadow=this.attachShadow({mode:"open"}),this.x1=t,this.y1=e,this.x2=n,this.y2=s,this.active=!1,this.num=i}connectedCallback(){this.render()}render(){return this.shadowRoot.innerHTML=`\n      <style>\n      .vektor-container {\n        position: absolute;\n        pointer-events: none; /* Чтобы не мешать кликам по канвасу */\n        z-index: 1;\n        width: 100%;\n        height: 100%;\n      }\n      .vektor {\n\n      }\n      .line {\n        position: relative;\n        fill: none;\n        stroke-width: 4;\n        stroke: black;\n        z-index: 1;\n      }\n      .line_active {\n        stroke: rgb(38, 143, 235);\n      }\n    </style>\n      <div class="vektor-container">\n        <svg class="vektor" height="100%" width="100%" xmlns="http://www.w3.org/2000/svg">\n          <line class="line ${this.active&&"line_active"}" x1="${this.x1}" y1="${this.y1}" x2="${this.x2}" y2="${this.y2}" />\n        </svg> \n      </div>\n    `}}customElements.get("my-vektor")||customElements.define("my-vektor",e);class s extends HTMLElement{constructor(){super(),this.isCanvasActive=!1,this.isPolygonDrawn=!1,this.firstPointSelectionFlag=!1,this.secondPointSelectionFlag=!1,this.isPathCreated=!1,this.order="Clockwise order",this.pointArr=[],this.vektorArr=[],this.events=new EventTarget}connectedCallback(){this.render(),this.canvas=this.querySelector(".drawing-canvas"),this.canvas.addEventListener("click",(t=>{t.preventDefault(),t.stopPropagation(),this.renderPoint(t)})),this.events.addEventListener("pathesCreated",(t=>{this.vektorArr.forEach((t=>t.active=!1));const e=this.pointArr.map((t=>t.num)),n=t.detail;this.order=t.detail.order;const s=n.clockwisePath.filter((t=>n.clockwisePath.indexOf(t)!==n.clockwisePath.length-1)).map((t=>e.indexOf(t))).map((t=>this.vektorArr[t]));if(s.forEach((t=>{t.active=!0,t.render()})),this.isPathCreated=!0,"Clockwise order"===this.order)s.forEach((t=>{t.render()}));else{const t=this.vektorArr.filter((t=>t.active)),e=this.vektorArr.filter((t=>!t.active));t.forEach((t=>{t.active=!1,t.render()})),e.forEach((t=>{t.active=!0,t.render()}))}})),this.events.addEventListener("changeOrder",(()=>{this.vektorArr.forEach((t=>{t.active?(t.active=!1,t.render()):(t.active=!0,t.render())}))}))}handlePointPressed(t){if(this.firstPointSelectionFlag){if(t.selectedAsSecond)return;this.pointArr.map((t=>{t.selectedAsFirst=!1,t.render()})),t.selectedAsFirst=!0,this.events.dispatchEvent(new Event("pointSelected")),t.render()}else if(this.secondPointSelectionFlag){if(t.selectedAsFirst)return;this.pointArr.map((t=>{t.selectedAsSecond=!1,t.render()})),t.selectedAsSecond=!0,this.events.dispatchEvent(new Event("pointSelected")),t.render()}const e=this.pointArr.find((t=>!0===t.selectedAsFirst)),n=this.pointArr.find((t=>!0===t.selectedAsSecond));e&&n&&this.events.dispatchEvent(new Event("twoPointsSelected"))}renderPoint(e){if(this.isCanvasActive&&!this.isPolygonDrawn){const n=this.canvas.getBoundingClientRect(),s=e.clientX-n.left,i=e.clientY-n.top,r=new t(s,i,this.pointArr.length+1,this);r.onPointPressed((()=>{this.handlePointPressed(r)})),this.pointArr.push(r),this.events.dispatchEvent(new Event("pointAdded")),this.canvas.appendChild(r)}}renderPointByCoords(e,n,s){const i=new t(e,n,s,this);i.onPointPressed((()=>{this.handlePointPressed(i)})),this.pointArr.push(i),this.events.dispatchEvent(new Event("pointAdded")),this.canvas.appendChild(i)}clearCanvas(){this.pointArr.forEach((t=>{this.canvas.removeChild(t)})),this.pointArr=[],this.vektorArr.forEach((t=>{this.canvas.removeChild(t)})),this.vektorArr=[],this.isCanvasActive=!1,this.events.dispatchEvent(new Event("pointsCleared")),this.isPolygonDrawn=!1,this.isPathCreated=!1}findCenterPoint(t){let e,n=0,s=0,i=t.length;for(e=0;e<i;e++)n+=t[e].x,s+=t[e].y;return{x:n/i,y:s/i}}findAngles(t,e){let n,s,i,r,o=e.length;for(n=0;n<o;n++)s=e[n],i=s.x-t.x,r=s.y-t.y,s.angle=Math.atan2(r,i);this.pointArr.sort((function(t,e){return t.angle>e.angle?1:t.angle<e.angle?-1:0}))}savePointsCoordsToLocalStorage(t){const e=t.map((t=>({x:t.x,y:t.y,name:t.num})));localStorage.setItem("points",JSON.stringify(e))}drawPolygon(t){if(!this.isPolygonDrawn){let n=[];const s=this.findCenterPoint(t);this.findAngles(s,t);for(let e=0;e<t.length;e++)e+1!==t.length?n.push({x1:t[e].x,y1:t[e].y,x2:t[e+1].x,y2:t[e+1].y}):n.push({x1:t[e].x,y1:t[e].y,x2:t[0].x,y2:t[0].y}),this.isPolygonDrawn=!0,this.isCanvasActive=!1;t.forEach(((t,s)=>{const i=new e(n[s].x1,n[s].y1,n[s].x2,n[s].y2,this.vektorArr.length+1);this.vektorArr.push(i),this.canvas.appendChild(i)}))}}render(){return this.innerHTML='\n      <style>\n        drawing-canvas {\n          display: flex;\n          flex-direction: row;\n          align-items: stretch;\n          width: 100%;\n          color: black;\n          border: 1px solid black;\n        }\n        .drawing-canvas {\n          position: relative;\n          width: 100%;\n          height: 100%;\n          background-color: white;\n          flex: 1;\n        }\n      </style>\n      <div class="drawing-canvas">\n      </div>\n    '}}customElements.get("drawing-canvas")||customElements.define("drawing-canvas",s);class i extends HTMLElement{constructor(t){super(),this.canvas=t,this.events=new EventTarget,this.clockwisePath="",this.counterclockwisePath="",this.orderButtonText="Clockwise order",this.currentPath=this.clockwisePath}attachEventListeners(){this.querySelector(".action-panel").addEventListener("click",(t=>{t.target.classList.contains("create-point-button")?this.canvas.isCanvasActive=!0:t.target.classList.contains("clear-button")?(this.canvas.clearCanvas(),this.clockwisePath="",this.counterclockwisePath="",this.currentPath="",this.orderButtonText="Clockwise order",this.canvas.firstPointSelectionFlag=!1,this.canvas.secondPointSelectionFlag=!1,this.render()):t.target.classList.contains("clear-storage-button")?this.clearLocalStorage():t.target.classList.contains("draw-button")?(this.canvas.drawPolygon(this.canvas.pointArr),this.canvas.savePointsCoordsToLocalStorage(this.canvas.pointArr),this.render()):t.target.classList.contains("first-point-button")?this.events.dispatchEvent(new Event("firstPointButtonPressed")):t.target.classList.contains("second-point-button")?this.events.dispatchEvent(new Event("secondPointButtonPressed")):t.target.classList.contains("order-button")&&(this.canvas.events.dispatchEvent(new Event("changeOrder")),"Clockwise order"===this.orderButtonText?(this.orderButtonText="Counterclockwise order",this.currentPath=this.counterclockwisePath.map((t=>"p"+t)).join(" - ")):(this.orderButtonText="Clockwise order",this.currentPath=this.clockwisePath.map((t=>"p"+t)).join(" - ")),this.render())}))}handlePath(){const t=this.canvas.pointArr.find((t=>t.selectedAsFirst)),e=this.canvas.pointArr.find((t=>t.selectedAsSecond));if(t&&e){const n=this.canvas.pointArr.map((t=>t.num)),s=t.num,i=e.num,r=this.makePathes(n,s,i);this.clockwisePath=r.clockwiseArr,this.counterclockwisePath=r.counterclockwiseArr,this.canvas.events.dispatchEvent(new CustomEvent("pathesCreated",{detail:{clockwisePath:this.clockwisePath,counterclockwisePath:this.counterclockwisePath,order:this.orderButtonText}}))}}makePathes(t,e,n){const s=t.indexOf(e),i=t.indexOf(n);let r=[],o=[];for(let e=s;e%t.length!==i;e++)r.push(t[e%t.length]);r.push(t[i]);const a=t.reverse(),c=a.indexOf(e),d=a.indexOf(n);for(let t=c;t%a.length!==d;t++)o.push(a[t%a.length]);return o.push(a[d]),{clockwiseArr:r,counterclockwiseArr:o}}connectedCallback(){this.render();const t=this.canvas;t.events.addEventListener("pointAdded",(()=>this.render())),t.events.addEventListener("pointsCleared",(()=>this.render())),this.events.addEventListener("firstPointButtonPressed",(()=>{t.secondPointSelectionFlag=!1,t.firstPointSelectionFlag=!0,this.render()})),this.events.addEventListener("secondPointButtonPressed",(()=>{t.firstPointSelectionFlag=!1,t.secondPointSelectionFlag=!0,this.render()})),t.events.addEventListener("pointSelected",(()=>this.render())),t.events.addEventListener("twoPointsSelected",(()=>{this.canvas.vektorArr.forEach((t=>{t.active=!1,t.render()})),this.handlePath(),"Clockwise order"===this.orderButtonText?this.currentPath=this.clockwisePath.map((t=>"p"+t)).join(" - "):this.currentPath=this.counterclockwisePath.map((t=>"p"+t)).join(" - "),this.render()}))}clearLocalStorage(){localStorage.removeItem("points")}render(){const t=this.canvas.pointArr.length,e=!(t>0),n=!(t>=3&&t<=15)||this.canvas.isPolygonDrawn,s=!this.canvas.isPolygonDrawn,i=this.canvas.isPolygonDrawn,r=!this.canvas.isPathCreated,o=this.canvas.firstPointSelectionFlag,a=this.canvas.secondPointSelectionFlag,c=this.canvas.pointArr.find((t=>t.selectedAsFirst)),d=this.canvas.pointArr.find((t=>t.selectedAsSecond)),l={};this.canvas.pointArr.forEach((t=>{l[t.num]=t}));const h=this.currentPath;this.innerHTML=`\n      <style>\n        .action-panel {\n          display: flex;\n          flex-direction: column;\n          gap: 30px;\n          width: 350px;\n        }\n        .action-panel_active {\n          border: 1px solid green;\n        }\n        .main-paragraph {\n          font-size: 22px;\n          font-weight: bold;\n        }\n        .path {\n          display: flex;\n          flex-direction: column;\n          gap: 15px;\n        }\n        .button {\n          font-size: 16px;\n          padding: 10px 20px;\n          width: 100%;\n          border: none;\n          border-radius: 8px;\n        }\n        .button:hover:not(:disabled) {\n          background-color: #d3eaea;\n          outline: 1px solid white;\n        }\n        .button:disabled {\n          opacity: .7;\n          pointer: none;\n        }\n        p {\n          margin: 5px 0px;\n        }\n        .first-point-button {\n          max-width: 260px;\n        }\n        .button-pressed {\n          outline: 3px solid rgb(38, 143, 235);\n        }\n        .second-point-button {\n          max-width: 260px;\n        }\n        .path-button-container {\n          display: flex;\n          gap: 30px;\n          align-items: flex-start;\n        }\n      </style>\n      <div class="action-panel">\n        <div>\n          <p class="main-paragraph">Create polygon</p>\n          <button class="button create-point-button" ${i&&"disabled"}>Create points</button>\n          <points-paragraph numbers="${t}"></points-paragraph>\n          <button class="button draw-button" ${n&&"disabled"}>Draw polygon</button>\n        </div>\n        <div>\n          <p class="main-paragraph">Create path</p>\n          <div class="path">        \n            <div class="path-button-container">\n              <button class="button first-point-button ${o&&"button-pressed"}" ${s&&"disabled"}>First point:</button>\n              <p>${c?`p${c.num}`:""}</p>\n            </div>\n            <div class="path-button-container">\n              <button class="button second-point-button  ${a&&"button-pressed"}" ${s&&"disabled"}>Second point:</button>\n              <p>${d?`p${d.num}`:""}</p>\n            </div>\n            <button class="button order-button" ${r&&"disabled"}>${this.orderButtonText}</button>\n            <button class="button clear-button" ${e&&"disabled"}>Clear</button>\n            <button class="button clear-storage-button">Clear local storage</button>\n          </div>\n        </div>\n        <p class="main-paragraph">Path: ${h}</p>\n      </div>\n    `,this.attachEventListeners()}}customElements.get("action-panel")||customElements.define("action-panel",i);class r extends HTMLElement{constructor(){super()}connectedCallback(){this.render();const t=document.querySelector(".container"),e=new s;this.canvas=e,t.appendChild(e);const n=new i(e);this.panel=n,t.appendChild(n),this.initializePolygon()}initializePolygon(){const t=JSON.parse(localStorage.getItem("points"));t&&(t.forEach((t=>{this.canvas.renderPointByCoords(t.x,t.y,t.name)})),this.canvas.drawPolygon(t),this.panel.render())}render(){return this.innerHTML='\n      <style>\n        .container {\n          display: flex;\n          justify-content: center;\n          gap: 30px;\n          max-width: 900px;\n        }\n      </style>\n      <div class="container"></div>\n      '}}customElements.get("app-initializer")||customElements.define("app-initializer",r);class o extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"});const t=this.getAttribute("numbers"),e=document.createElement("style");e.textContent=`\n        p {\n          color: ${t>=3&&t<=15?"#1bcc35":"#DC2E45"};\n        }\n      `,this.paragraph=document.createElement("p"),this.shadowRoot.append(e,this.paragraph)}connectedCallback(){this.updateNumbers()}static get observedAttributes(){return["numbers"]}attributeChangedCallback(t){"numbers"===t&&this.updateNumbers()}updateNumbers(){const t=this.getAttribute("numbers");t&&(this.paragraph.textContent=`Created ${t} points`)}}customElements.get("points-paragraph")||customElements.define("points-paragraph",o);var a=n(379),c=n.n(a),d=n(795),l=n.n(d),h=n(569),p=n.n(h),u=n(565),v=n.n(u),f=n(216),g=n.n(f),m=n(589),b=n.n(m),x=n(424),w={};w.styleTagTransform=b(),w.setAttributes=v(),w.insert=p().bind(null,"head"),w.domAPI=l(),w.insertStyleElement=g(),c()(x.Z,w),x.Z&&x.Z.locals&&x.Z.locals})()})();